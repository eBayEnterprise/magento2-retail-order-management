dbdata:
    image: mysql:5
    command: echo 'Providing data volume for mysql data'
db:
    image: mysql:5
    environment:
        - MYSQL_ROOT_PASSWORD=mage
        - MYSQL_USER=mage
        - MYSQL_PASSWORD=mage
        - MYSQL_DATABASE=mage
    volumes_from:
        - dbdata
testdb:
    image: mysql:5
    environment:
        - MYSQL_ROOT_PASSWORD=mage
        - MYSQL_USER=mage
        - MYSQL_PASSWORD=mage
        - MYSQL_DATABASE=mage
devfs:
    build: dockerenv
    volumes:
        - .:/var/www/code
    command: echo 'Providing fs data volume'
intfs:
    build: integrationenv
    command: echo 'Prodiving fs data volume'
web:
    build: integrationenv
    environment:
        - MAGE_MODE=developer
    volumes_from:
        - intfs
    links:
        - db
    ports:
        - "80"
integrationcomposer:
    build: integrationenv
    volumes_from:
        - intfs
    volumes:
        - ~/.composer:/home/default/.composer
        - .:/git/magento2-retail-order-management
    user: default
    command: list
    entrypoint: ["composer"]
deploy:
    build: integrationenv
    volumes_from:
        - intfs
    volumes:
        - ~/.composer:/home/default/.composer
        - .:/git/magento2-retail-order-management
    user: default
    entrypoint: ["deploy_extension"]
install:
    build: integrationenv
    user: default
    volumes_from:
        - intfs
    volumes:
        - ~/.composer:/home/default/.composer
        - .:/git/magento2-retail-order-management
    links:
        - db
    entrypoint: ["install_magento"]
magentosetup:
    build: integrationenv
    user: default
    volumes_from:
        - intfs
    links:
        - db
    working_dir: /var/www/localhost/magento/bin
    entrypoint: ["php", "magento"]
    command: help
shelltools:
    build: integrationenv
    user: default
    volumes_from:
        - intfs
    links:
        - db
    working_dir: /var/www/code/build/magento/dev/shell
    entrypoint: ["php"]
    command: ["-r", "echo implode('    ', glob('*.php')) . PHP_EOL;"]
composer:
    build: dockerenv
    volumes_from:
        - devfs
    volumes:
        - ~/.composer:/root/.composer
    working_dir: /var/www/code
    command: list
    entrypoint: ["composer"]
behat:
    build: dockerenv
    volumes_from:
        - devfs
    working_dir: /var/www/code
    entrypoint: ["vendor/bin/behat"]
seleniumserver:
    image: selenium/standalone-chrome
    links:
        - web:web.test
functionaltests:
    build: dockerenv
    volumes_from:
        - devfs
    links:
        - seleniumserver
    working_dir: /var/www/code
    entrypoint: ["vendor/bin/behat", "--profile=functional"]
integrationtests:
    build: dockerenv
    links:
        - db:testdb
    volumes_from:
        - devfs
        - intfs
    environment:
        MAGENTO_ROOT_DIR: /var/www/localhost/magento
    entrypoint: ["php", "bin/integrationTests", "--profile=integration"]
phpunit:
    build: dockerenv
    volumes_from:
        - devfs
    working_dir: /var/www/code
    entrypoint: ["vendor/bin/phpunit"]
phpmd:
    build: dockerenv
    volumes_from:
        - devfs
    working_dir: /var/www/code
    entrypoint: ["vendor/bin/phpmd"]
    command: src,tests text phpmd.xml
document:
    build: dockerenv
    volumes_from:
        - devfs
    entrypoint: ["vendor/bin/phpdoc"]
    command: -d src -t build/doc
pdepend:
    build: dockerenv
    volumes_from:
        - devfs
    entrypoint: ["vendor/bin/pdepend"]
    command: --jdepend-chart="build/pdepend/dependencies.svg" \
             --jdepend-xml="build/pdepend/jdepend.xml" \
             --overview-pyramid="build/pdepend/overview-pyramid.svg" \
             src
phpcpd:
    build: dockerenv
    volumes_from:
        - devfs
    entrypoint: ["vendor/bin/phpcpd"]
    command: --fuzzy --progress src tests
phpcs:
    build: dockerenv
    volumes_from:
        - devfs
    entrypoint: ["vendor/bin/phpcs"]
    command: -p --standard=PSR2 src tests
phploc:
    build: dockerenv
    volumes_from:
        - devfs
    entrypoint: ["vendor/bin/phploc"]
    command: --count-tests --progress src tests
phplint:
    build: dockerenv
    volumes_from:
        - devfs
    command: sh -c 'find src tests \( -name "*.php" -o -name "*.phtml" \) -print0 |
                    xargs -0 -n1 -P6 -- php -l > /dev/null && echo "no errors"'
